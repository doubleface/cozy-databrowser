{"version":3,"sources":["app/application.js","app/initialize.js","app/models/menu.js","app/views/main.js","app/views/menu.js"],"names":["Router","Backbone","extend","routes","onDoctype","doctype","app","views","main","setDoctype","menu","select","initialize","$el","appendTo","router","history","start","$","on","$aside","isExpanded","attr","window","Collection","model","Model","fetch","cozysdk","queryView","group","then","console","log","result","catch","err","error","attrToString","_","isObject","i","View","el","collection","listenTo","render","getCols","json","length","push","title","data","defaultContent","html","toJSON","config","destroy","lengthChange","dom","buttons","scrollX","scrollY","deferRender","scroller","columns","DataTable","reset","url","done","bind","itemTemplate","template","forEach","sclass","selected","empty","removeClass","addClass"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAIA,SAASC,SAASD,MAAT,CAAgBE,MAAhB,CAAuB;AAChCC,YAAQ;AACJ,4BAAoB;AADhB,KADwB;AAIhCC,aAJgC,qBAItBC,OAJsB,EAId;AACd,aAAKC,GAAL,CAASC,KAAT,CAAeC,IAAf,CAAoBC,UAApB,CAA+BJ,OAA/B;AACA,aAAKC,GAAL,CAASC,KAAT,CAAeG,IAAf,CAAoBC,MAApB,CAA2BN,OAA3B;AACH;AAP+B,CAAvB,CAAb;;AAUA,IAAIC,MAAM;AACNM,cADM,wBACO;AACT,aAAKL,KAAL,GAAa;AACTG,kBAAM,oBADG;AAETF,kBAAM;AAFG,SAAb;AAIA,aAAKD,KAAL,CAAWG,IAAX,CAAgBG,GAAhB,CAAoBC,QAApB,CAA6B,YAA7B;AACA,aAAKP,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoBC,QAApB,CAA6B,YAA7B;AACA,aAAKC,MAAL,GAAc,IAAIf,MAAJ,CAAW;AACrBM,iBAAK;AADgB,SAAX,CAAd;AAGA,aAAKS,MAAL,CAAYT,GAAZ,GAAkB,IAAlB;AACAL,iBAASe,OAAT,CAAiBC,KAAjB;;AAEAC,UAAE,8BAAF,EAAkCC,EAAlC,CAAqC,OAArC,EAA8C,YAAM;AAChD,gBAAMC,SAASF,EAAE,OAAF,CAAf;AACA,gBAAMG,aAAaD,OAAOE,IAAP,CAAY,eAAZ,MAAiC,MAAjC,GAA0C,OAA1C,GAAoD,MAAvE;AACAF,mBAAOE,IAAP,CAAY,eAAZ,EAA6BD,UAA7B;AACH,SAJD;AAKH;AAnBK,CAAV;;AAsBA,IAAIN,SAAS,IAAIf,MAAJ,EAAb;;kBAEeM,G;;;;;;ACrCf;;;;;;AAEAiB,OAAOjB,GAAP;;AAEAY,EAAE;AAAA,SAAM,sBAAIN,UAAJ,EAAN;AAAA,CAAF;;;;;;;;;kBCJeX,SAASuB,UAAT,CAAoBtB,MAApB,CAA2B;AACtCuB,WAAOxB,SAASyB,KADsB;AAEtCC,SAFsC,mBAE9B;AACJ,eAAOJ,OAAOK,OAAP,CAAeC,SAAf,CAAyB,UAAzB,EAAqC,SAArC,EAAgD,EAACC,OAAO,IAAR,EAAhD,EACNC,IADM,CACD,kBAAU;AACZC,oBAAQC,GAAR,CAAYC,MAAZ,EAAoB,eAApB;AACA,mBAAOA,MAAP;AACH,SAJM,EAIJC,KAJI,CAIE,UAASC,GAAT,EAAa;AAClBJ,oBAAQK,KAAR,CAAcD,GAAd,EAAmB,mCAAnB;AACH,SANM,CAAP;AAOH;AAVqC,CAA3B,C;;;;;;;;;ACAf,SAASE,YAAT,CAAsBhB,IAAtB,EAA4B;AACxB,QAAI,CAACiB,EAAEjB,IAAF,EAAQkB,QAAR,EAAL,EAAyB,OAAOlB,IAAP,CAAzB,KACK;AACD,YAAIY,SAAS,MAAb;AACA,aAAK,IAAIO,CAAT,IAAcnB,IAAd,EAAoB;AAChBY,+BAAgBI,aAAahB,KAAKmB,CAAL,CAAb,CAAhB;AACH;AACDP,kBAAS,OAAT;AACA,eAAOA,MAAP;AACH;AACJ;;kBAEcjC,SAASyC,IAAT,CAAcxC,MAAd,CAAqB;AAChCyC,QAAI,sBAD4B;AAEhCC,gBAAY,IAAI3C,SAASuB,UAAb,EAFoB;AAGhCZ,cAHgC,wBAGnB;AACT,aAAKiC,QAAL,CAAc,KAAKD,UAAnB,EAA+B,OAA/B,EAAwC,KAAKE,MAA7C;AACH,KAL+B;AAMhCC,WANgC,mBAMxBC,IANwB,EAMlB;AACV,YAAId,SAAS,EAAb;AACA,YAAIc,KAAKC,MAAL,KAAgB,CAApB,EAAuB,OAAOf,MAAP;AACvB,aAAK,IAAIO,CAAT,IAAcO,KAAK,CAAL,CAAd,EAAuB;AACnBd,mBAAOgB,IAAP,CAAY;AACRC,uBAAOV,CADC;AAERW,sBAAMX,CAFE;AAGRY,gCAAgB;AAHR,aAAZ;AAKH;AACD,eAAOnB,MAAP;AACH,KAjB+B;AAkBhCY,UAlBgC,oBAkBvB;AACL,aAAKjC,GAAL,CAASyC,IAAT,CAAc,iBAAd;AACA,YAAIN,OAAO,KAAKJ,UAAL,CAAgBW,MAAhB,EAAX;AACA,YAAIC,SAAS;AACTC,qBAAS,IADA;AAETC,0BAAc,KAFL;AAGTC,iBAAK,eAHI;AAITC,qBAAS,CACL,QADK,CAJA;AAOTC,qBAAS,MAPA;AAQTC,qBAAS,mBARA;AASTC,yBAAa,IATJ;AAUTC,sBAAU,IAVD;AAWTZ,kBAAMJ,IAXG;AAYTiB,qBAAS,KAAKlB,OAAL,CAAaC,IAAb;AAZA,SAAb;AAcA,aAAK9B,CAAL,CAAO,OAAP,EAAgBgD,SAAhB,CAA0BV,MAA1B;AACA,eAAO,IAAP;AACH,KArC+B;AAsChC/C,cAtCgC,sBAsCrBJ,OAtCqB,EAsCb;AACf,aAAKA,OAAL,GAAeA,OAAf;AACA,aAAKuC,UAAL,CAAgBjB,KAAhB,CAAsB;AAClBwC,mBAAO,IADW;AAElBC,iBAAK,iCAAiC/D;AAFpB,SAAtB;AAIH;AA5C+B,CAArB,C;;;;;;;;;;ACZf;;;;;;kBAEeJ,SAASyC,IAAT,CAAcxC,MAAd,CAAqB;AAChCyC,QAAI,OAD4B;AAEhCC,gBAAY,oBAFoB;AAGhChC,cAHgC,wBAGnB;AACT,aAAKgC,UAAL,CAAgBjB,KAAhB,GAAwB0C,IAAxB,CAA6B,KAAKvB,MAAL,CAAYwB,IAAZ,CAAiB,IAAjB,CAA7B;AACH,KAL+B;;AAMhCC,kBAAchC,EAAEiC,QAAF,CAAW,kGAAX,CANkB;AAOhC1B,UAPgC,oBAOvB;AAAA;;AACL,YAAIQ,OAAO,MAAX;AACA,aAAKV,UAAL,CAAgB6B,OAAhB,CAAwB,UAAChD,KAAD,EAAW;AAC/B,gBAAIuB,OAAOvB,MAAM8B,MAAN,EAAX;AACAP,iBAAK0B,MAAL,GAAc1B,KAAK3C,OAAL,KAAiB,MAAKsE,QAAtB,GAAiC,UAAjC,GAA8C,EAA5D;AACArB,oBAAO,MAAKiB,YAAL,CAAkBvB,IAAlB,CAAP;AACH,SAJD,EAIG,IAJH;AAKAM,gBAAO,OAAP;AACA,aAAKzC,GAAL,CAAS+D,KAAT,GAAiBtB,IAAjB,CAAsBA,IAAtB;AACA,eAAO,IAAP;AACH,KAjB+B;AAkBhC3C,UAlBgC,kBAkBzBN,OAlByB,EAkBhB;AACZ,aAAKsE,QAAL,GAAgBtE,OAAhB;AACA,aAAKa,CAAL,CAAO,GAAP,EAAY2D,WAAZ,CAAwB,UAAxB;AACA,aAAK3D,CAAL,CAAO,sBAAsBb,OAAtB,GAAgC,IAAvC,EAA6CyE,QAA7C,CAAsD,UAAtD;AACH;AAtB+B,CAArB,C","file":"public/javascripts/app.js","sourcesContent":["import MenuView from \"views/menu\";\nimport MainView from \"views/main\";\n\nvar Router = Backbone.Router.extend({\n    routes: {\n        \"doctype/:doctype\": \"onDoctype\"\n    },\n    onDoctype(doctype){\n        this.app.views.main.setDoctype(doctype);\n        this.app.views.menu.select(doctype);\n    }\n});\n\nvar app = {\n    initialize() {\n        this.views = {\n            menu: new MenuView(),\n            main: new MainView()\n        };\n        this.views.menu.$el.appendTo(\"#container\");\n        this.views.main.$el.appendTo(\"#container\");\n        this.router = new Router({\n            app: this\n        });\n        this.router.app = this;\n        Backbone.history.start();\n\n        $(\"[formaction='drawer/toggle']\").on(\"click\", () => {\n            const $aside = $(\"aside\")\n            const isExpanded = $aside.attr(\"aria-expanded\") === \"true\" ? \"false\" : \"true\";\n            $aside.attr(\"aria-expanded\", isExpanded);\n        });\n    }\n}\n\nvar router = new Router();\n\nexport default app\n\n","import app from \"application\";\n\nwindow.app = app;\n\n$(() => app.initialize());\n","export default Backbone.Collection.extend({\n    model: Backbone.Model,\n    fetch() {\n        return window.cozysdk.queryView(\"doctypes\", \"getsums\", {group: true})\n        .then(result => {\n            console.log(result, \"result to see\");\n            return result;\n        }).catch(function(err){\n            console.error(err, \"there was an error in the request\");\n        });\n    }\n});\n","function attrToString(attr) {\n    if (!_(attr).isObject()) return attr;\n    else {\n        let result = '<ul>';\n        for (let i in attr) {\n            result+= `<li>${attrToString(attr[i])}</li>`;\n        }\n        result+= '</ul>';\n        return result;\n    }\n}\n\nexport default Backbone.View.extend({\n    el: \"[role='contentinfo']\",\n    collection: new Backbone.Collection(),\n    initialize() {\n        this.listenTo(this.collection, \"reset\", this.render);\n    },\n    getCols(json) {\n        var result = [];\n        if (json.length === 0) return result;\n        for (var i in json[0]) {\n            result.push({\n                title: i,\n                data: i,\n                defaultContent: \"\"\n            });\n        }\n        return result;\n    },\n    render() {\n        this.$el.html('<table></table>');\n        var json = this.collection.toJSON();\n        var config = {\n            destroy: true,\n            lengthChange: false,\n            dom: '<\"thead\"Bfi>t',\n            buttons: [\n                'colvis'\n            ],\n            scrollX: \"100%\",\n            scrollY: \"calc(100vh - 7em)\",\n            deferRender: true,\n            scroller: true,\n            data: json,\n            columns: this.getCols(json)\n        };\n        this.$(\"table\").DataTable(config);\n        return this;\n    },\n    setDoctype(doctype){\n        this.doctype = doctype;\n        this.collection.fetch({\n            reset: true,\n            url: \"search?range=all&doctypes[]=\" + doctype\n        });\n    }\n});\n","import Collection from \"models/menu\";\n\nexport default Backbone.View.extend({\n    el: \"aside\",\n    collection: new Collection(),\n    initialize() {\n        this.collection.fetch().done(this.render.bind(this));\n    },\n    itemTemplate: _.template('<li><a class=\"<%= sclass %>\" href=\"#doctype/<%= doctype %>\"><%= doctype %> (<%= sum %>)</a></li>'),\n    render() {\n        var html = \"<ul>\";\n        this.collection.forEach((model) => {\n            var json = model.toJSON();\n            json.sclass = json.doctype === this.selected ? \"selected\" : \"\";\n            html+= this.itemTemplate(json);\n        }, this);\n        html+= \"</ul>\";\n        this.$el.empty().html(html);\n        return this;\n    },\n    select(doctype) {\n        this.selected = doctype;\n        this.$(\"a\").removeClass(\"selected\");\n        this.$(\"a[href='#doctype/\" + doctype + \"']\").addClass(\"selected\");\n    }\n});\n"]}